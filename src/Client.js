/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as core from "./core";
import * as errors from "./errors/index";
import { Agents } from "./api/resources/agents/client/Client";
import { Guidelines } from "./api/resources/guidelines/client/Client";
import { Glossary } from "./api/resources/glossary/client/Client";
import { ContextVariables } from "./api/resources/contextVariables/client/Client";
import { Sessions } from "./api/resources/sessions/client/Client";
import { Evaluations } from "./api/resources/evaluations/client/Client";
import { Services } from "./api/resources/services/client/Client";
import { Tags } from "./api/resources/tags/client/Client";
import { Customers } from "./api/resources/customers/client/Client";
export class ParlantClient {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * @param {ParlantClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.rootGet()
     */
    rootGet(requestOptions) {
        return core.APIPromise.from((() => __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: yield core.Supplier.get(this._options.environment),
                method: "GET",
                headers: Object.assign({ "X-Fern-Language": "JavaScript", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
            });
            if (_response.ok) {
                return {
                    ok: _response.ok,
                    body: _response.body,
                    headers: _response.headers,
                };
            }
            if (_response.error.reason === "status-code") {
                throw new errors.ParlantError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case "non-json":
                    throw new errors.ParlantError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case "timeout":
                    throw new errors.ParlantTimeoutError("Timeout exceeded when calling GET /.");
                case "unknown":
                    throw new errors.ParlantError({
                        message: _response.error.errorMessage,
                    });
            }
        }))());
    }
    get agents() {
        var _a;
        return ((_a = this._agents) !== null && _a !== void 0 ? _a : (this._agents = new Agents(this._options)));
    }
    get guidelines() {
        var _a;
        return ((_a = this._guidelines) !== null && _a !== void 0 ? _a : (this._guidelines = new Guidelines(this._options)));
    }
    get glossary() {
        var _a;
        return ((_a = this._glossary) !== null && _a !== void 0 ? _a : (this._glossary = new Glossary(this._options)));
    }
    get contextVariables() {
        var _a;
        return ((_a = this._contextVariables) !== null && _a !== void 0 ? _a : (this._contextVariables = new ContextVariables(this._options)));
    }
    get sessions() {
        var _a;
        return ((_a = this._sessions) !== null && _a !== void 0 ? _a : (this._sessions = new Sessions(this._options)));
    }
    get evaluations() {
        var _a;
        return ((_a = this._evaluations) !== null && _a !== void 0 ? _a : (this._evaluations = new Evaluations(this._options)));
    }
    get services() {
        var _a;
        return ((_a = this._services) !== null && _a !== void 0 ? _a : (this._services = new Services(this._options)));
    }
    get tags() {
        var _a;
        return ((_a = this._tags) !== null && _a !== void 0 ? _a : (this._tags = new Tags(this._options)));
    }
    get customers() {
        var _a;
        return ((_a = this._customers) !== null && _a !== void 0 ? _a : (this._customers = new Customers(this._options)));
    }
}
