/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "./core";
import { Agents } from "./api/resources/agents/client/Client";
import { Guidelines } from "./api/resources/guidelines/client/Client";
import { Glossary } from "./api/resources/glossary/client/Client";
import { ContextVariables } from "./api/resources/contextVariables/client/Client";
import { Sessions } from "./api/resources/sessions/client/Client";
import { Evaluations } from "./api/resources/evaluations/client/Client";
import { Services } from "./api/resources/services/client/Client";
import { Tags } from "./api/resources/tags/client/Client";
import { Customers } from "./api/resources/customers/client/Client";
export declare namespace ParlantClient {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class ParlantClient {
    protected readonly _options: ParlantClient.Options;
    constructor(_options: ParlantClient.Options);
    /**
     * @param {ParlantClient.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.rootGet()
     */
    rootGet(requestOptions?: ParlantClient.RequestOptions): core.APIPromise<unknown>;
    protected _agents: Agents | undefined;
    get agents(): Agents;
    protected _guidelines: Guidelines | undefined;
    get guidelines(): Guidelines;
    protected _glossary: Glossary | undefined;
    get glossary(): Glossary;
    protected _contextVariables: ContextVariables | undefined;
    get contextVariables(): ContextVariables;
    protected _sessions: Sessions | undefined;
    get sessions(): Sessions;
    protected _evaluations: Evaluations | undefined;
    get evaluations(): Evaluations;
    protected _services: Services | undefined;
    get services(): Services;
    protected _tags: Tags | undefined;
    get tags(): Tags;
    protected _customers: Customers | undefined;
    get customers(): Customers;
}
